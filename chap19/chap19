多线程3种类型:
    1.QApplication.processEvents()处理尚未处理事件,如 绘制事件/鼠标和键按下事件.
    2.零超时定时器(zero-timeout timer)通常用于大量文件的加载过程,例:第9章 文本编辑器的MainWindow.loadFiles()方法.
    3.将当前工作完全转交给另一个程序进行处理,用py库的子进程模块(subprocess module)或PyQt的QProccess类.例:makepyqt.pyw

 pageindexer.pyw:一个主(GUI)线程 和一个次线程(secondary thread)

支持多线和的类: 主要作用是保护共享数据的读写.
    QMutex:互拆体
    QReadWriteLock:读写锁
    Qsemaphore:信号量

19.1 创建线程服务器[多线程版]
    buildingservicesclient.pyw
    buildingservicesserver.pyw <--QReadWriteLock应用.

    walker.py ::注意正则表达式的应用.

19.2/3
pageindexer.pyw/walker.py : 单次线程的应用
pageindexer_26.pyw/walker_26.py :  QMutexLocker(self.mutex) / QReadLocker(self.lock) 的应用
pageindexer_ans.pyw/walker_ans.py : 多个次线程的应用(在低配置电脑(双核)运行太慢注意)


上网找资料.
QCompleter(文本补齐)
QFileSystemWatcher(监控文件系统中文件和目录所发生的变化)
QSystemTrayIcon(在系统栏上放一个带弹出菜单的图标)