Ctrl +斜杠::          单行\选择行.注释\取消注释({ #在Django模板,或#在Python脚本)。
Ctrl + Shift +斜杠::  一块选择的源代码在Django模板块与周围{ %评论% }和{ % endcomment % }标记。

导航栏是一个快速替代项目视图。
Alt +Home 快捷键显示导航栏,和箭头键来定位当前的文件或文件夹。

Alt + 9:版本控制工具窗口可以执行所有必要的版本控制操作,提交修改,管理变更列表,把资源放在版本控制,检查差异等等。

译文：当您想要捕获一些代码片段抛出的异常时，请在编辑器中选择它，按Ctrl+Alt+T(代码包围)并选择try/除外。这将自动生成唯一的子句。

译文：按Ctrl+Click(在Windows上)或Cmd+单击(在MacOS上)，在编辑器中的一个选项卡导航到文件路径的任意部分。在下拉框中选择必要的元素，相应的文件路径将在一个外部浏览器中打开(例如，在浏览器中，如果您的操作系统是Windows)。

在编辑器中关闭除当前标签外所有标签的方法，:
1.右键单击编辑器选项卡，然后在上下文菜单中选择关闭的其他选项。
2.保持Alt键按下，单击编辑器选项卡 '×'。

移动语句块:Shift+Alt+↑,Shift+Alt+↓

运行管理工具的最简单的方法。py任务是选择Run管理。工具菜单中的py任务，或者按Ctrl+Alt+r。
当您键入想要运行的实用程序的名称时，查找列表会缩小到只显示匹配条目。
如果您输入一个星号，py妩媚将显示所有可用任务的完整列表。

译文：使用切换器(Ctrl+Tab)在打开的文件和工具窗口之间切换。按下Ctrl键，使用上下箭头键，选项卡或Shift+Tab，Alt键导航;使用Delete或BackSpace来关闭编辑器标签或隐藏工具窗口。

如果你按Ctrl+Shift+N，你可以直接跳转到任何深埋的文件，并且只键入包含的目录和文件名的几个字符:

Ctrl+ Q(查看|快速文档)、Ctrl + P(查看|参数信息)、Ctrl + B(导航|声明)等快捷方式，不仅可以在编辑器中使用，还可以在代码完成弹出列表中使用。
您可以通过按Ctrl+O(代码覆盖方法)轻松地覆盖基类的方法。

译文：要在编辑器中快速打开任何特定的方法或字段，按Ctrl +Alt+Shift+ N(导航|符号)并开始键入它的名称。从出现的下拉列表中选择符号。

1.使用代码完成时，使用Tab键接受当前弹出列表中高亮显示的选择。与按Enter键不同的是，所选名称将覆盖在caret(插入符号)右侧的其余部分。这对于替换一个方法或变量名称特别有用。

2.关闭 选项卡/工具窗口::鼠标光标指向需关闭的选项卡[点击鼠标中键 / Shift+click]


3.在任何视图(项目视图、结构视图或其他)中快速选择当前编辑的元素(类、文件、方法或字段)，按Alt + F1。进入翻译页面

4.任何工具窗口中的Esc键都将焦点转移到编辑器上。Shift+ Esc将焦点转移到编辑器，并隐藏当前(或最后一个活动)工具窗口。
默认键映射键中的F12将焦点从编辑器转移到最后一个聚焦工具窗口。

5.提取变量重构可以帮助您简化代码中的复杂语句。例如，在下面的代码片段中，您可以选择代码中的表达式，并按Alt +Shift+ L(Refactor |提取|变量)。

6.移动代码片段::选择一代码片段,按Ctrl + Shift +↑或Ctrl + Shift +↓。

7.复制所选的块或当前行::Ctrl + D将复制所选的块或当前行，而不选择块。

Ctrl+Shift+ J快捷方式将两个行合并为一个，并移除不必要的空格以匹配你的代码样式。

如果游标在方法调用的括号之间，按Ctrl + P就会弹出一个有效参数列表。

Ctrl+Shift+ Backspace(导航|最后编辑位置)把你带回最后一个地方，你在代码中做了修改。
按Ctrl +Shift+ Backspace几次可以让你更深入地改变你的历史。


使用Ctrl +Shift+ F7(编辑|找到文件中的|高亮用法)，快速突出当前文件中某个变量的用法。
使用F3和Shift + F3键通过突出显示的用法进行导航。
按Esc删除高亮显示。


译文：Ctrl+ E(查看|最近的文件)带来了最近访问过的文件的弹出列表。选择所需的文件并按Enter打开它。
译文：除了最近的文件，您还可以打开最近执行的使用搜索的结果。要做到这一点，使用与Find工具窗口相同的Ctrl + E快捷方式，并选择所需的查找用法。

当你想要使用远程的解释器时，你会发现自己处于一种情境中吗?有了py咒语，就很容易了。
要配置一个远程解释器，按下Ctrl+Alt+S，并在项目下面，打开页面项目解释器。
然后点击gear按钮，选择添加远程的选项:
您可以为您的项目使用这个远程解释器，或者只是将它作为一个可用的解释器。

译文：如果您将输入符放在特定的符号上，按下Ctrl+Alt+Shift+T，您将看到可适用于当前上下文的重构列表。

只需使用一个按键，就可以从编辑器中应用另一个代码样式/着色方案或keymap。只是按Ctrl +后引号(查看|快速切换方案),指定你想要改变的计划。

译文：在保持Alt键按下时，可以通过拖动鼠标指针轻松地进行列选择。

正则表达式的格式可能相当复杂。为了确保你没有漏掉一些斜杠或引号，把输入符放在你想要检查的表达式的某个地方，然后按Alt+Enter。
在弹出框中，您认为应该匹配正则表达式的字符串。如果背景变成绿色，你是幸运的。如果它变红了，那你就得找个错误。

译文：使用autopopup代码完成时,您可以使用Ctrl +句点 选择第一项点。选择的名称会自动输入到编辑器后面，然后是点。

译文：通过按住Shift键，使鼠标滚轮的水平滚动。

译文：要快速查找菜单命令或工具栏操作，您不需要查看菜单。只需按Ctrl +Shift+ A(帮助|在主菜单上找到动作)，然后开始键入动作的名称。从建议列表中选择所需的操作。

译文：您可以将一个类、方法或变量的所有用法列表在整个项目中提交，并快速跳转到所选的用法。要做到这一点，在符号的名称或代码的使用中放置插入符号，并按Ctrl +Alt+ F7(编辑|在主菜单中查找|显示用法)，滚动列表并单击所需的用法。



在pyCharm中，可以有多个游标。在向Alt施压后，点击鼠标左键，在编辑器中设置额外的光标。
按Esc删除所有额外的游标，但是位于caret的一行。

译文：通过按住Alt +Shift+ F10，你可以在主工具栏上访问运行/调试下拉菜单，无需使用鼠标。

译文：当从建议列表中选择一个实时模板时，按Ctrl+Q来查看快速文档——确保你做出了正确的选择:

译文：当您想捕获一些代码片段抛出的异常时，在编辑器中选择它，按Ctrl +Alt+ T(代码|环绕)并选择try / except。这将自动生成except子句。

译文：在交互式控制台工作，您不需要记住命令行语法或可用的函数。相反,您可以使用熟悉的代码完成Ctrl +空格。此外，从查找列表中，可以按Ctrl + Q查看项目的文档。

译文：要在“列模式”中选择多个片段，按住Control+Alt+Shift(在Windows和Linux上)或Cmd+Alt+Shift(在MAC上)，拖动鼠标光标。


译文：
运行管理工具的最简单方法。py任务是选择运行管理。在工具菜单中执行py任务，或者按Ctrl +Alt+ R。
当您键入要运行的实用程序的名称时，查找列表会缩小，只显示匹配的条目。
如果您键入星号，PyCharm将显示所有可用任务的完整列表。

译文：
在查找和替换功能之间切换非常容易。
当您在一个文件中执行搜索和替换时，按下Ctrl + F显示搜索窗格。按下Ctrl + R添加字段，在这里您可以键入替换字符串。
在路径对话框中，你可以用Ctrl +Shift+ R来替换。同样地，按Ctrl +Shift+ F来隐藏替换字段，然后切换到仅搜索。

译文：数据库控制台允许您编写和执行SQL语句(Ctrl+Enter)，并分析查询结果。

译文：您可以通过按Ctrl+Enter来执行注入的SQL语句和SQL文件中的语句。(或者，Alt+Enter在控制台中输入Run查询。)

译文：您可以比较数据源、模式和表。在数据库工具窗口中，选择您想要比较的两个项目，并按Ctrl+d。

译文：如果将数据库定义为数据源，就可以访问数据库控制台、表编辑器、数据库图和其他用于数据库的有用特性。进入翻译页面

译文：为了不手动更新数据库视图，您可以为相应的数据源启用自动同步(数据库工具窗口的上下文菜单中的数据源属性)。

译文：智能完井在SQL(Ctrl + Shift +空格)的列类型,和主键和外键

译文：数据库图可用于数据源、模式和表。按Ctrl+Alt+Shift+U在编辑器中打开一个图表

要快速打开编辑器中的任何类，按Ctrl+N(导航类)，并开始键入类的名称。从出现的下拉列表中选择类。
您可以使用Ctrl+Shift+N(导航文件)以类似的方式打开项目中的任何文件

译文：代码完成特性允许您在代码中快速完成不同类型的语句。例如,输入一个类名并按Ctrl +空格来完成它。当多个选项可用时，它们将显示在查找列表中。

译文：你可以在整个项目中快速找到一个特定的类、方法或变量，通过将caret(输入符)定位于符号的名称或在代码中使用，并按下Alt+F7(在弹出菜单中找到用法)。

译文：快速查看caret(输入符)上的符号文档，按Ctrl+Q(查看快速文档)

译文：要导航到代码中某个地方使用的类、方法或变量的声明，将caret定位于使用并按Ctrl+b。您还可以按Ctrl键按下鼠标，然后跳到声明。

译文：
您可以在当前编辑的文件中快速导航，并使用Ctrl+F12(导航文件结构)。
它显示了当前类的成员列表。选择您想要导航到的元素并按下Enter键或F4键。
为了方便地在列表中找到一个项目，只需键入它的名称

译文：
您可以轻松地对本地变量进行重命名，并对所使用的所有位置进行自动校正。
要尝试它，将caret放在您想要重命名的变量上，并按Shift+F6(重构重命名)。在弹出窗口中键入新名称，或者选择一个建议的名称，然后按Enter键。


译文：
当使用代码完成时，您可以使用Tab键来接受弹出列表中当前突出显示的选择。
与接受Enter键不同，选中的名称将覆盖到caret的右边的其他名称。这对于用另一个方法替换一个方法或变量名特别有用。


译文：您是否知道您可以在编辑器和py魅惑的工具窗口中关闭选项卡，而不需要使用上下文菜单命令?只需将鼠标指针指向关闭的选项卡，单击中间的鼠标按钮，或者使用Shift+单击组合即可。

译文：在任何视图(项目视图、结构视图或其他)中快速选择当前编辑的元素(类、文件、方法或字段)，按Alt+F1。

译文：如果你按Ctrl+Shift+N，你可以直接跳转到任何深埋的文件，并且只键入包含的目录和文件名的几个字符:例:l/l/l/d

译文：要在编辑器中打开任何类或文件，请按Ctrl+Shift+N(导航|文件)，开始键入名称，并从建议列表中选择其中一个。然后输入冒号(:)和一个行号。例:de:10 选择的文件将在指定的行上打开插入符号。

译文：在编辑器中，Ctrl+W(扩展选择)选择在caret中选择单词，然后选择扩展的源代码区域。例如，它可以选择一个方法名，然后是调用这个方法的表达式，然后是整个语句，然后是包含的块等等。你还可以通过双击编辑器中的目标区域来选择caret中的单词和扩展的源代码区域。

译文：提取变量重构可以帮助您简化代码中的复杂语句。例如，在下面的代码片段中，您可以在代码中选择一个表达式，并按Ctrl+Alt+V(重构提取变量)

译文：在编辑器中，Ctrl+D复制选中的块或当前行，当没有选择块时

译文：Ctrl+Shift+J快捷键将两个行连接到一个，并删除不必要的空格来匹配您的代码风格。

译文：如果光标位于方法调用的括号之间，按Ctrl+P会弹出一个有效参数列表
译文：
您可以排除项目中的任何文件。因此，这样的文件将被索引、检查和代码完成所忽略。
在“项目工具”窗口中，选择要忽略的文件，并在其上下文菜单中选择“标记为纯文本”。
如果需要，您可以使用标记作为上下文菜单命令，将文件返回到其原始类型。

译文：
Ctrl+Shift+Backspace(导航最后的编辑位置)会让你回到上次修改代码的地方。
按Ctrl+Shift+Backspace几次会让你更深入地了解你的变化历史。

译文：Ctrl+E(查看最近的文件)带来了最近访问过的文件的弹出列表。选择所需的文件并按Enter键打开它。

译文：使用Ctrl+Shift+V快捷键来选择和插入最近的剪贴板内容到文本中。

译文：Ctrl+Q（查看快速文档）、Ctrl+P（查看参数信息）、Ctrl+B（导航声明）等快捷键不仅可以在编辑器中使用，还可以在代码完成弹出列表中使用。

译文：您可以通过按Ctrl+O（代码重写方法）轻松地覆盖基类的方法。

译文：要快速打开编辑器中的任何特定方法或字段，按Ctrl+Alt+Shift+N（导航符号）并开始键入名称

译文：使用Alt+Shift+C快速查看项目最近的变化

译文：通过一次击键，您可以从编辑器中应用另一个代码样式/着色方案或keymap。只是按Ctrl +`后引号(查看|快速切换方案),指定你想要改变的计划

译文：在保持Alt键按下时，你可以通过拖动鼠标指针来轻松地进行列选择。

译文：如果在编辑器中没有选择任何东西，并且按Ctrl+C，那么caret的整个行将被复制到剪贴板。

译文：如果您不想将您的一些更改提交到存储库，您可以将它们放在一边，通过移动到一个单独的变更列表，或者将它们放到一个架子上。在change工具窗口的Local选项卡中选择这样的文件，在上下文菜单中选择移动到另一个变更列表，或者搁置更改。

译文：您可以在整个项目中提出类、方法或变量的所有用法的列表，并快速跳转到所选的用法。要做到这一点，将caret放置在符号的名称或在代码中使用，按Ctrl+Alt+F7（在主菜单中编辑查找显示用法），滚动列表并单击所需的用法。
